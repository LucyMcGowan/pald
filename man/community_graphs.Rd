% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pald_functions.R
\name{community_graphs}
\alias{community_graphs}
\title{Community Graphs}
\usage{
community_graphs(C)
}
\arguments{
\item{C}{A matrix of cohesion values (see \code{cohesion_matrix}).}
}
\value{
A list consisting of:
\itemize{
\item G: the weighted (community) graph whose edge weights are mutual cohesion
\item  G_strong: the weighted (community) graph consisting of edges for which mutual cohesion is greater than the threshold for strong ties (see strong_threshold)
\item  layout: the layout, using the Fruchterman Reingold (FR) force-directed graph drawing for the graph G
}
}
\description{
Provides the graphs whose edge weights are (mutual) cohesion together with a graph layout.
}
\details{
Constructs the graph objects whose edge weights are (mutual) cohesion (see \code{cohesion_matrix}), self-loops are removed.
The graph G has adjacency matrix equal to the symmetrized cohesion matrix (using the entry-wise minimum of C and its transpose).
The graph G_strong has adjacency matrix equal to the thresholded and symmetrized cohesion matrix (see \code{cohesion_strong}).  The threshold is equal to half of the average of the diagonal of the
cohesion matrix (see \code{strong_threshold}).

A layout is also computed using the Fructerman Reingold (FR) force-directed graph drawing algorithm.  As a result, it will provide a somewhat different layout each time it is run.
}
\examples{
C <- cohesion_matrix(dist(exdata2))
plot(community_graphs(C)$G_strong)
plot(community_graphs(C)$G_strong, layout = community_graphs(C)$layout)
}
