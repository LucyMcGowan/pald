[{"path":"https://lucymcgowan.github.io/pald/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 pald authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lucymcgowan.github.io/pald/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Katherine Moore. Author. Kenneth Berenhaut. Author. Lucy D'Agostino McGowan. Author, maintainer.","code":""},{"path":"https://lucymcgowan.github.io/pald/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moore K, Berenhaut K, D'Agostino McGowan L (2022). pald: Partitioned Local Depths Community Structure Data. R package version 0.0.1, https://github.com/moorekatherine/pald.","code":"@Manual{,   title = {pald: Partitioned Local Depths for Community Structure in Data},   author = {Katherine Moore and Kenneth Berenhaut and Lucy {D'Agostino McGowan}},   year = {2022},   note = {R package version 0.0.1},   url = {https://github.com/moorekatherine/pald}, }"},{"path":"https://lucymcgowan.github.io/pald/index.html","id":"partitioned-local-depth","dir":"","previous_headings":"","what":"Partitioned Local Depths for Community Structure in Data","title":"Partitioned Local Depths for Community Structure in Data","text":"Katherine Moore, Kenneth Berenhaut, Lucy D’Agostino McGowan January 2022 package provides implementation Partitioned Local Depths (PaLD) approach consists measure local depth cohesion point another , together universal threshold distinguishing strong weak ties, may used reveal local global structure data. extraneous inputs, distributional assumptions, iterative procedures optimization criteria employed. package includes functions computing local depths cohesion matrices well flexible functions plotting community networks displays cohesion distance. discussion perspective, including theoretical results applications, see: Berenhaut, Kenneth S., Katherine E. Moore, Ryan L. Melvin. 2022. “Social Perspective Perceived Distances Reveals Deep Community Structure.” Proceedings National Academy Sciences, 119 (3).","code":""},{"path":"https://lucymcgowan.github.io/pald/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Partitioned Local Depths for Community Structure in Data","text":"can install development version pald GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"LucyMcGowan/pald\") library(pald)"},{"path":"https://lucymcgowan.github.io/pald/index.html","id":"input","dir":"","previous_headings":"","what":"Input","title":"Partitioned Local Depths for Community Structure in Data","text":"input Partitioned Local Depths (PaLD) approach distance matrix (dist object) associated finite collection data points. Throughout, distributional assumptions, iterative procedures optimization criteria employed. information extracted distance matrix within-triplet dissimilarity comparisons. result, outputs unaffected monotone transformations collection distances (e.g., log2). , one may transform measure similarity, s(x,y), measure dissimilarity, d(x,y), via order-reversing monotone transformation, instance taking d(x,y) = 1/(1+s(x,y)). provides user flexibility choice dissimilarity (e.g., triangle inequality required) care taken stage. function dist() stats package converts input data frame (n rows) n × n distance matrix. Euclidean examples , use default Euclidean distance.","code":""},{"path":"https://lucymcgowan.github.io/pald/index.html","id":"a-small-example","dir":"","previous_headings":"","what":"A Small Example","title":"Partitioned Local Depths for Community Structure in Data","text":"demonstration purposes, let’s begin small example Figure 1 (Berenhaut, Moore, Melvin 2022). wrapper function pald() computes cohesion matrix local depths determined community networks may formed. plots community networks, strongly cohesive pairs colored according connected component. connected components may considered “(community) clusters.” Note Fruchterman Reingold (FR) force-directed network drawing algorithm employed provide somewhat different graph layouts time run.  wrapper function pald() returns list containing: cohesion matrix, local depths, (community) clusters, threshold identifying strong ties, thresholded symmetrized cohesion matrix, community graph whose edges weighted mutual cohesion, weighted graph strong ties, layout provided FR network drawing algorithm applied community graph. time function pald() called, matrix cohesion values re-computed. avoid unnecessary computation, following functions included: local_depths(),strong_threshold(), cohesion_strong(), community_graphs(), plot_community_graphs(). now walk function turn.","code":"par(mfrow = c(1, 2), pty = \"s\")    D <- dist(exdata1) pald_results <- pald(D, emph_strong = 1, vertex.label.cex = 3)  ###  plot(exdata1,      pch = 16,      xlim = c(-2.5, 2.25),      ylim=c(-1.5, 3.25),      xlab = \"\",       ylab = \"\",        main = \"Local Depths\") text(exdata1 + .23,       lab = round(pald_results$local_depths, 2),       xlim = c(-2.5, 2.25),      ylim = c(-1.5, 3.25),       xlab = \"\",       ylab = \"\",       cex = .8)"},{"path":"https://lucymcgowan.github.io/pald/index.html","id":"cohesion-matrix","dir":"","previous_headings":"","what":"Cohesion Matrix","title":"Partitioned Local Depths for Community Structure in Data","text":"Cohesion reflects relationship strength perspective relative position, see (Berenhaut, Moore, Melvin 2022). begin PaLD analysis, must first compute matrix cohesion values input distance matrix dist object. Note cohesion symmetric. values, C[x,w], cohesion matrix interpretable probabilities capture strength alignment w x. sum cohesion matrix always equal n/2 (n number data points).","code":"D <- dist(exdata1) C <- cohesion_matrix(D) round(C, 4) #>        1      2      3      4      5      6      7      8 #> 1 0.1658 0.1199 0.1199 0.0179 0.0179 0.0000 0.0000 0.0000 #> 2 0.1306 0.1765 0.0179 0.1199 0.0000 0.0000 0.0204 0.0765 #> 3 0.1187 0.0204 0.1646 0.1054 0.0383 0.0179 0.0000 0.0000 #> 4 0.0179 0.1043 0.1043 0.1787 0.0621 0.0954 0.0621 0.0000 #> 5 0.0179 0.0000 0.0357 0.0561 0.1871 0.1216 0.0799 0.0000 #> 6 0.0000 0.0000 0.0204 0.0765 0.1599 0.2075 0.1599 0.0179 #> 7 0.0000 0.0179 0.0000 0.0595 0.0799 0.1216 0.1871 0.0357 #> 8 0.0000 0.0799 0.0000 0.0000 0.0000 0.0179 0.0357 0.1514 #> attr(,\"class\") #> [1] \"cohesion_matrix\" \"matrix\"          \"array\"  # A heat-map of the cohesion matrix image(t(apply(C, 2, rev)), main = \"Cohesion Matrix Heatmap\")"},{"path":"https://lucymcgowan.github.io/pald/index.html","id":"local-depths","dir":"","previous_headings":"","what":"Local Depths","title":"Partitioned Local Depths for Community Structure in Data","text":"Local depth probability describes support point data-determined local foci. Cohesion obtained partitioning local depth, thus values local depth can computed row sums cohesion matrix. See also Figure 2(b), . average values local depth always equal 1/2.","code":"# local depths are obtained by computing: rowSums(C) local_depths(C) #>         1         2         3         4         5         6         7         8  #> 0.4413265 0.5418367 0.4653061 0.6246599 0.4982993 0.6420068 0.5017007 0.2848639 mean(local_depths(C)) #> [1] 0.5"},{"path":"https://lucymcgowan.github.io/pald/index.html","id":"threshold-and-strong-ties","dir":"","previous_headings":"","what":"Threshold and Strong Ties","title":"Partitioned Local Depths for Community Structure in Data","text":"threshold provided (Berenhaut, Moore, Melvin 2022) distinguishing strongly weakly cohesive pairs equal half average diagonal cohesion matrix. function computing provided. Pairs points mutual cohesion (.e., min {Cx, w, Cw, x}) greater threshold considered ``strongly cohesive.” thresholded symmetrized cohesion matrix can obtained using function ‘cohesion_strong.’","code":"# the threshold is obtained by computing: mean(diag(C))/2 strong_threshold(C) #> [1] 0.08866922 round(cohesion_strong(C), 4) #>        1      2      3      4      5      6      7      8 #> 1 0.1658 0.1199 0.1187 0.0000 0.0000 0.0000 0.0000 0.0000 #> 2 0.1199 0.1765 0.0000 0.1043 0.0000 0.0000 0.0000 0.0000 #> 3 0.1187 0.0000 0.1646 0.1043 0.0000 0.0000 0.0000 0.0000 #> 4 0.0000 0.1043 0.1043 0.1787 0.0000 0.0000 0.0000 0.0000 #> 5 0.0000 0.0000 0.0000 0.0000 0.1871 0.1216 0.0000 0.0000 #> 6 0.0000 0.0000 0.0000 0.0000 0.1216 0.2075 0.1216 0.0000 #> 7 0.0000 0.0000 0.0000 0.0000 0.0000 0.1216 0.1871 0.0000 #> 8 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.1514 #> attr(,\"class\") #> [1] \"cohesion_matrix\" \"matrix\"          \"array\""},{"path":"https://lucymcgowan.github.io/pald/index.html","id":"community-structure-and-display","dir":"","previous_headings":"","what":"Community Structure and Display","title":"Partitioned Local Depths for Community Structure in Data","text":"overall structure data can observed via networks obtained cohesion (referred “community graphs”). community graph symmetric, weighted graph obtained symmetrizing cohesion matrix (using min {Cx, w, Cw, x}) removing self-loops. “community cluster graph” subgraph consisting edges mutual cohesion greater threshold. connected components community cluster graph, G_strong, referred (community) clusters data. Note additional inputs (e.g., number clusters, neighborhood size) optimization criteria employed (community) cluster identification. Strong ties points severed; partitioning community graph desired, one employ methods (instance, Louvain method) resulting community graphs. function plotting community graphs, edges vertices colored according cluster membership, provided. default layout obtained via Fruchterman Reingold (FR) force-directed graph drawing algorithm. Note FR force-directed algorithm provide somewhat different layouts time run.  can save particular network layout using community_graphs(C)$layout.function plot_community_graphs can take given layout argument. , let’s overlay community graph original data, , plot network using layout provided orignal data.","code":"graphs <- community_graphs(C)  community_clusters(C) #>   point cluster #> 1     1       1 #> 2     2       1 #> 3     3       1 #> 4     4       1 #> 5     5       2 #> 6     6       2 #> 7     7       2 #> 8     8       3 plot_community_graphs(C) par(pty = \"s\") plot(exdata1,      xlim = c(0, 1),       ylim = c(0, 1),       col = \"white\",      xlab = \"\",       ylab = \"\") par(new = TRUE) plot_community_graphs(C, layout = as.matrix(exdata1), show_labels = FALSE)"},{"path":"https://lucymcgowan.github.io/pald/index.html","id":"cohesion-against-distance","dir":"","previous_headings":"","what":"Cohesion Against Distance","title":"Partitioned Local Depths for Community Structure in Data","text":"Observe cohesion direct transformation distance. dist_cohesion_plot() function provides plot pairwise distances associated value(s) cohesion; horizontal line indicates threshold. Within-cluster edges colored, weak ties plotted open circles. See (Berenhaut, Moore, Melvin 2022) interpretation plots. Let’s re-create Figure 2 (Berenhaut, Moore, Melvin 2022).  Rather showing pairs, (d(x, y), C(x, w)) (d(x, y), C(w, x)) distinct points plot, setting mutual = TRUE plot mutual cohesion, set points x-coordinate d(x, y) y-coordinate min{C(x, w), C(w, x)}.","code":"D <- dist(exdata2) C <- cohesion_matrix(D) par(mfrow = c(1, 2)) par(pty = \"s\") plot(exdata2,      col = \"white\",      xlab = \"\",      ylab = \"\") par(new = TRUE) plot_community_graphs(C,                       layout = as.matrix(exdata2),                       show_labels = FALSE,                       vertex.size = 3) dist_cohesion_plot(D, cex = .8, weak_gray = TRUE) par(pty = \"s\") D <- dist(exdata2) dist_cohesion_plot(D, mutual = TRUE)"},{"path":"https://lucymcgowan.github.io/pald/index.html","id":"randomly-generated-data","dir":"","previous_headings":"","what":"Randomly-Generated Data","title":"Partitioned Local Depths for Community Structure in Data","text":"example, consider randomly-generated data set 15 points. Points selected according uniform distribution unit square. first compute distance matrix calculate cohesion matrix. overlay community graphs data set using plot_community_graphs use original data layout.","code":"ex_data <- matrix(runif(30), ncol = 2) D <- dist(ex_data) C <- cohesion_matrix(D) par(pty = \"s\") plot(   ex_data,   xlim = c(0, 1),   ylim = c(0, 1),   col = \"white\",   xlab = \"\",   ylab = \"\" ) par(new = TRUE) plot_community_graphs(   C,   layout = ex_data,   emph_strong = 1,   show_labels = FALSE,   edge_width_factor = 50,   vertex.size = 8 )"},{"path":"https://lucymcgowan.github.io/pald/index.html","id":"cognate-based-language-families","dir":"","previous_headings":"","what":"Cognate-based Language Families","title":"Partitioned Local Depths for Community Structure in Data","text":"Let’s perform PaLD analysis cognate data set (Dyen, Kruskal, Black 1992). clarity display, show include (random set ) 37 vertex labels. remaining arguments aesthetics plot. Note network layout somewhat different time FR network drawing algorithm called.  One alternatively use wrapper function: pald(cognate_dist, emph_strong = 3, edge_width_factor = 30, vertex.label = lang_lab_subset, vertex.label.cex = .65, vertex.size = 3). return list containing: cohesion matrix, local depths, (community) clusters, threshold identifying strong ties, thresholded symmetrized cohesion matrix, community graph whose edges weighted mutual cohesion, weighted graph strong ties, layout provided FR network drawing algorithm applied community graph. One can determine (strongly cohesive) neighbors using igraph’s neighbor function. Edge-weights given cohesion (mutual cohesion) can found directly cohesion matrix.","code":"C_lang <- cohesion_matrix(cognate_dist) lang_lab_subset <- rownames(C_lang) lang_lab_subset[sample(1:87, 50)] <- '' plot_community_graphs(   C_lang,   edge_width_factor = 30,   emph_strong = 3,   vertex.label = lang_lab_subset,   vertex.label.cex = .65,   vertex.size = 3 ) library(igraph) G_strong_lang <- community_graphs(C_lang)$G_strong neighbors(G_strong_lang, \"French\") #> + 8/87 vertices, named, from a2e3ffe: #> [1] Italian         Ladin           Provencal       Walloon         #> [5] French_Creole_C French_Creole_D Spanish         Catalan  #And print associated neighborhood weights C_lang[\"French\", neighbors(G_strong_lang, \"French\")] #>         Italian           Ladin       Provencal         Walloon French_Creole_C  #>      0.01997696      0.02094596      0.02871174      0.03258771      0.02406057  #> French_Creole_D         Spanish         Catalan  #>      0.02406057      0.01679733      0.01859688"},{"path":"https://lucymcgowan.github.io/pald/index.html","id":"clustering-in-the-presence-of-varying-density","dir":"","previous_headings":"","what":"Clustering in the Presence of Varying Density","title":"Partitioned Local Depths for Community Structure in Data","text":"Cohesion particularly useful considering data varying local density, see discussion (Berenhaut, Moore, Melvin 2022). Note PaLD able detect eight natural groups within data without use additional inputs (e.g., number clusters) optimization criteria. Despite providing “correct” number clusters (.e., k = 8) k-means hierarchical clustering give desired result.  results data obtained k-means hierarchical clustering k = 8.  Berenhaut, Kenneth S., Katherine E. Moore, Ryan L. Melvin. 2022. “Social Perspective Perceived Distances Reveals Deep Community Structure.” Proceedings National Academy Sciences 119 (3). Dyen, Isidore, Joseph B. Kruskal, Paul Black. 1992. “Indoeuropean Classification: Lexicostatistical Experiment.” Transactions American Philosophical Society 82 (5): iii. https://doi.org/10.2307/1006517.","code":"D3 <- dist(exdata3) C3 <- cohesion_matrix(D3) par(pty = \"s\") plot(   exdata3,   col = \"white\",   xlab = \"\",   ylab = \"\",   main = \"PaLD Community Graphs\" ) par(new = TRUE) plot_community_graphs(   C3,   layout = as.matrix(exdata3),   show_labels = FALSE,   emph_strong = 25,   edge_width_factor = 2,   vertex.size = 5 ) ### The cluster vector is provided by `pald' and also may be computed via: library(igraph) cluster_graph <- community_graphs(C3)$G_strong #pald_cluster_vector<- clusters(cluster_graph)$membership table(clusters(cluster_graph)$membership) #>  #>  1  2  3  4  5  6  7  8  #> 40 40 60 20 20 20 20 20 par(mfrow = c(1, 2), pty = \"s\") km_clusters <- kmeans(exdata3, 8)$cluster plot(   exdata3,   pch = 16,   col = pald_colors[km_clusters],   xlab = \"\",   ylab = \"\",   main = \"K-Means Clusters (k = 8)\" ) h_clusters <- cutree(hclust(dist(exdata3)), k = 8) plot(   exdata3,   pch = 16,   col = pald_colors[h_clusters],   xlab = \"\",   ylab = \"\",   main = \"Hiearchical Clusters (k = 8)\" )"},{"path":"https://lucymcgowan.github.io/pald/reference/aggregation.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation — aggregation","title":"Aggregation — aggregation","text":"synthetic data set two-dimensional points created Gionis et al. demonstrate clustering aggregation.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/aggregation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation — aggregation","text":"","code":"aggregation"},{"path":"https://lucymcgowan.github.io/pald/reference/aggregation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aggregation — aggregation","text":"data frame 788 rows 2 columns, x1 x2.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/aggregation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Aggregation — aggregation","text":". Gionis, H. Mannila, P. Tsaparas, Clustering aggregation. ACM Transactions Knowledge Discovery Data (TKDD), 2007. 1(1): p. 1-30. Available : http://cs.joensuu.fi/sipu/datasets/","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/any_isolated.html","id":null,"dir":"Reference","previous_headings":"","what":"Any isolated — any_isolated","title":"Any isolated — any_isolated","text":"Checks isolated points.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/any_isolated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Any isolated — any_isolated","text":"","code":"any_isolated(c)"},{"path":"https://lucymcgowan.github.io/pald/reference/any_isolated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Any isolated — any_isolated","text":"c cohesion_matrix object, matrix cohesion values (see cohesion_matrix).","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/any_isolated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Any isolated — any_isolated","text":"Logical, indicating whether points isolated.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/any_isolated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Any isolated — any_isolated","text":"","code":"d <- data.frame(   x1 = c(1, 2, 3, 6),   x2 = c(2, 1, 3, 10)   ) D <- dist(d) C <- cohesion_matrix(D) any_isolated(C) #> These points have no (strong nor weak) ties:  #> * 4"},{"path":"https://lucymcgowan.github.io/pald/reference/as_cohesion_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce a matrix to a cohesion matrix object — as_cohesion_matrix","title":"Coerce a matrix to a cohesion matrix object — as_cohesion_matrix","text":"as_cohesion_matrix() converts existing matrix object class cohesion_matrix.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/as_cohesion_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce a matrix to a cohesion matrix object — as_cohesion_matrix","text":"","code":"as_cohesion_matrix(c)"},{"path":"https://lucymcgowan.github.io/pald/reference/as_cohesion_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce a matrix to a cohesion matrix object — as_cohesion_matrix","text":"c matrix cohesion values (see cohesion_matrix).","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/as_cohesion_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce a matrix to a cohesion matrix object — as_cohesion_matrix","text":"Object class cohesion_matrix","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/as_cohesion_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce a matrix to a cohesion matrix object — as_cohesion_matrix","text":"","code":"C <- matrix(   c(0.25, 0.125, 0.125, 0,    0.125, 0.25, 0, 0.125,    0.125, 0, 0.25, 0.125,    0, 0.125, 0.125, 0.25 ), nrow = 4, byrow = TRUE)  class(C) #> [1] \"matrix\" \"array\"   C <- as_cohesion_matrix(C) class(C) #> [1] \"cohesion_matrix\" \"matrix\"          \"array\""},{"path":"https://lucymcgowan.github.io/pald/reference/cognate_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Cognate Data Distance Matrix — cognate_dist","title":"Cognate Data Distance Matrix — cognate_dist","text":"dist object describing distances 87 Indo-European languages perspective cognates.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cognate_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cognate Data Distance Matrix — cognate_dist","text":"","code":"cognate_dist"},{"path":"https://lucymcgowan.github.io/pald/reference/cognate_dist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cognate Data Distance Matrix — cognate_dist","text":"dist object 87 Indo-European languages.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cognate_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cognate Data Distance Matrix — cognate_dist","text":"Cognate relationships collection essential words collected Dyen et al. encoded 87x2665 binary matrix distance matrix derived (using Euclidean distance).","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cognate_dist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cognate Data Distance Matrix — cognate_dist","text":". Dyen, J. B. Kruskal, P. Black, Indoeuropean classification: lexicostatistical experiment. Trans. . Phil. Soc. 82, iii-132 (1992).","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Cohesion Matrix — cohesion_matrix","title":"Cohesion Matrix — cohesion_matrix","text":"Creates matrix (pairwise) cohesion values matrix pairwise distances dist object.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohesion Matrix — cohesion_matrix","text":"","code":"cohesion_matrix(d)"},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohesion Matrix — cohesion_matrix","text":"d matrix pairwise distances dist object.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cohesion Matrix — cohesion_matrix","text":"matrix cohesion values. object class cohesion_matrix.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cohesion Matrix — cohesion_matrix","text":"Computes matrix (pairwise) cohesion values, C_xw, matrix pairwise distances dist object. Cohesion interpretable probability reflects strength alignment point, w, another point, x. rows cohesion matrix can seen providing neighborhood weights.  values may used defining associated weighted graphs (purpose community analysis)  Berenhaut, Moore, Melvin (2022). Given n x n distance matrix, sum entries resulting cohesion matrix always equal n/2. Cohesion partitioned local depth (see local_depths) thus row sums cohesion matrix provide measure local depth centrality. matrix already cohesion matrix like add class, see as_cohesion_matrix().","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cohesion Matrix — cohesion_matrix","text":"K. S. Berenhaut, K. E. Moore, R. L. Melvin, social perspective perceived distances reveals deep community structure. Proc. Natl. Acad. Sci., 119(4), 2022.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cohesion Matrix — cohesion_matrix","text":"","code":"plot(exdata1) text(exdata1 + .08, lab = 1:8)   D <- dist(exdata1) C <- cohesion_matrix(D) C #>            1          2          3          4          5          6          7 #> 1 0.16581633 0.11989796 0.11989796 0.01785714 0.01785714 0.00000000 0.00000000 #> 2 0.13061224 0.17653061 0.01785714 0.11989796 0.00000000 0.00000000 0.02040816 #> 3 0.11870748 0.02040816 0.16462585 0.10544218 0.03826531 0.01785714 0.00000000 #> 4 0.01785714 0.10425170 0.10425170 0.17874150 0.06207483 0.09540816 0.06207483 #> 5 0.01785714 0.00000000 0.03571429 0.05612245 0.18707483 0.12159864 0.07993197 #> 6 0.00000000 0.00000000 0.02040816 0.07653061 0.15986395 0.20748299 0.15986395 #> 7 0.00000000 0.01785714 0.00000000 0.05952381 0.07993197 0.12159864 0.18707483 #> 8 0.00000000 0.07993197 0.00000000 0.00000000 0.00000000 0.01785714 0.03571429 #>            8 #> 1 0.00000000 #> 2 0.07653061 #> 3 0.00000000 #> 4 0.00000000 #> 5 0.00000000 #> 6 0.01785714 #> 7 0.03571429 #> 8 0.15136054 #> attr(,\"class\") #> [1] \"cohesion_matrix\" \"matrix\"          \"array\"            ## neighbor weights (provided by cohesion) for the 8th point in exdata1 C[8, ] #>          1          2          3          4          5          6          7  #> 0.00000000 0.07993197 0.00000000 0.00000000 0.00000000 0.01785714 0.03571429  #>          8  #> 0.15136054  localdepths <- rowSums(C)"},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_strong.html","id":null,"dir":"Reference","previous_headings":"","what":"Cohesion Matrix: Strong Ties — cohesion_strong","title":"Cohesion Matrix: Strong Ties — cohesion_strong","text":"Provides symmetrized thresholded matrix cohesion values.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_strong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohesion Matrix: Strong Ties — cohesion_strong","text":"","code":"cohesion_strong(c, symmetric = TRUE)"},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_strong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohesion Matrix: Strong Ties — cohesion_strong","text":"c cohesion_matrix object, matrix cohesion values (see cohesion_matrix). symmetric Logical. Whether returned matrix made symmetric (using minimum); default TRUE.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_strong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cohesion Matrix: Strong Ties — cohesion_strong","text":"symmetrized cohesion matrix entries corresponding weak ties set zero.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_strong.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cohesion Matrix: Strong Ties — cohesion_strong","text":"threshold provided strong_threshold (equal half average diagonal c). Values cohesion matrix less threshold set zero. symmetrization, desired, computed using entry-wise (parallel) minimum C ts transpose (.e., min(C_ij, C_ji)). matrix provided cohesion_strong (default symmetric = TRUE) adjacency matrix graph strong ties (cluster graph), see community_graphs pald.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/cohesion_strong.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cohesion Matrix: Strong Ties — cohesion_strong","text":"","code":"C <- cohesion_matrix(dist(exdata2)) strong_threshold(C) #> [1] 0.06194614 cohesion_strong(C) #>             1          2          3          4          5          6         7 #> 1  0.14836219 0.07563492 0.06280664 0.09280664 0.11169553 0.00000000 0.0000000 #> 2  0.07563492 0.13119048 0.06230159 0.07563492 0.08947330 0.00000000 0.0000000 #> 3  0.06280664 0.06230159 0.12082011 0.07748677 0.06280664 0.00000000 0.0000000 #> 4  0.09280664 0.07563492 0.07748677 0.13304233 0.06280664 0.00000000 0.0000000 #> 5  0.11169553 0.08947330 0.06280664 0.06280664 0.14502886 0.00000000 0.0000000 #> 6  0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.11577201 0.0000000 #> 7  0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.1025661 #> 8  0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 #> 9  0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.08225783 0.0000000 #> 10 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 #> 11 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 #> 12 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 #> 13 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 #> 14 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 #> 15 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 #> 16 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 #>            8          9         10         11         12         13         14 #> 1  0.0000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #> 2  0.0000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #> 3  0.0000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #> 4  0.0000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #> 5  0.0000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #> 6  0.0000000 0.08225783 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #> 7  0.0000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #> 8  0.1054762 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #> 9  0.0000000 0.11559117 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #> 10 0.0000000 0.00000000 0.11990741 0.07702381 0.00000000 0.06765873 0.00000000 #> 11 0.0000000 0.00000000 0.07702381 0.13257937 0.00000000 0.09924603 0.00000000 #> 12 0.0000000 0.00000000 0.00000000 0.00000000 0.11302503 0.07746947 0.06746947 #> 13 0.0000000 0.00000000 0.06765873 0.09924603 0.07746947 0.13988095 0.00000000 #> 14 0.0000000 0.00000000 0.00000000 0.00000000 0.06746947 0.00000000 0.13194444 #> 15 0.0000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.09230159 #> 16 0.0000000 0.00000000 0.06435185 0.00000000 0.00000000 0.00000000 0.00000000 #>            15         16 #> 1  0.00000000 0.00000000 #> 2  0.00000000 0.00000000 #> 3  0.00000000 0.00000000 #> 4  0.00000000 0.00000000 #> 5  0.00000000 0.00000000 #> 6  0.00000000 0.00000000 #> 7  0.00000000 0.00000000 #> 8  0.00000000 0.00000000 #> 9  0.00000000 0.00000000 #> 10 0.00000000 0.06435185 #> 11 0.00000000 0.00000000 #> 12 0.00000000 0.00000000 #> 13 0.00000000 0.00000000 #> 14 0.09230159 0.00000000 #> 15 0.12563492 0.00000000 #> 16 0.00000000 0.10145503 #> attr(,\"class\") #> [1] \"cohesion_matrix\" \"matrix\"          \"array\"            ## To illustrate the calculation performed C_strong <- C  ## C_strong is equal to cohesion_strong(C, symmetric = FALSE) C_strong[C < strong_threshold(C)] <- 0  ## C_strong_sym is equal to cohesion_strong(C) C_strong_sym <- pmin(C_strong, t(C_strong))  ## The (cluster) graph whose adjacency matrix, CS, ## is the matrix of strong ties CS <- cohesion_strong(C)  if (requireNamespace(\"igraph\", quietly = TRUE)) { G_strong <- igraph::simplify(   igraph::graph.adjacency(CS, weighted = TRUE, mode = \"undirected\")   ) plot(G_strong) }"},{"path":"https://lucymcgowan.github.io/pald/reference/community_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Community clusters — community_clusters","title":"Community clusters — community_clusters","text":"Community clusters","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/community_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Community clusters — community_clusters","text":"","code":"community_clusters(c)"},{"path":"https://lucymcgowan.github.io/pald/reference/community_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Community clusters — community_clusters","text":"c cohesion_matrix object, matrix cohesion values (see cohesion_matrix).","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/community_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Community clusters — community_clusters","text":"data frame two columns: point: points cohesion matrix c cluster: (community) cluster labels","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/community_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Community clusters — community_clusters","text":"","code":"D <- dist(exdata2) C <- cohesion_matrix(D) community_clusters(C) #>    point cluster #> 1      1       1 #> 2      2       1 #> 3      3       1 #> 4      4       1 #> 5      5       1 #> 6      6       2 #> 7      7       3 #> 8      8       4 #> 9      9       2 #> 10    10       5 #> 11    11       5 #> 12    12       5 #> 13    13       5 #> 14    14       5 #> 15    15       5 #> 16    16       5"},{"path":"https://lucymcgowan.github.io/pald/reference/community_graphs.html","id":null,"dir":"Reference","previous_headings":"","what":"Community Graphs — community_graphs","title":"Community Graphs — community_graphs","text":"Provides graphs whose edge weights (mutual) cohesion, together graph layout.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/community_graphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Community Graphs — community_graphs","text":"","code":"community_graphs(c)"},{"path":"https://lucymcgowan.github.io/pald/reference/community_graphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Community Graphs — community_graphs","text":"c cohesion_matrix object, matrix cohesion values (see cohesion_matrix).","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/community_graphs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Community Graphs — community_graphs","text":"list consisting : G: weighted (community) graph whose edge weights mutual cohesion G_strong: weighted (community) graph consisting edges mutual cohesion greater threshold strong ties (see strong_threshold) layout: layout, using Fruchterman Reingold (FR) force-directed graph drawing graph G","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/community_graphs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Community Graphs — community_graphs","text":"Constructs graphs whose edge weights (mutual) cohesion (see cohesion_matrix), self-loops removed. graph G adjacency matrix equal symmetrized cohesion matrix (using entry-wise parallel minimum C transpose). graph G_strong adjacency matrix equal thresholded symmetrized cohesion matrix (see cohesion_strong).  threshold equal half average diagonal cohesion matrix (see strong_threshold). layout also computed using Fruchterman-Reingold (FR) force-directed graph drawing algorithm.  result, may provide somewhat different layout time run.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/community_graphs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Community Graphs — community_graphs","text":"","code":"C <- cohesion_matrix(dist(exdata2)) plot(community_graphs(C)$G_strong)  plot(community_graphs(C)$G_strong, layout = community_graphs(C)$layout)"},{"path":"https://lucymcgowan.github.io/pald/reference/dist_cohesion_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance Cohesion Plot — dist_cohesion_plot","title":"Distance Cohesion Plot — dist_cohesion_plot","text":"Provides plot cohesion distance, threshold indicated horizontal line.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/dist_cohesion_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance Cohesion Plot — dist_cohesion_plot","text":"","code":"dist_cohesion_plot(   d,   mutual = FALSE,   xlim_max = NULL,   cex = 1,   colors = NULL,   weak_gray = FALSE )"},{"path":"https://lucymcgowan.github.io/pald/reference/dist_cohesion_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance Cohesion Plot — dist_cohesion_plot","text":"d matrix pairwise distances dist object. mutual Set TRUE consider mutual cohesion (.e., symmetrized using minimum); default FALSE. xlim_max desired, set maximum value distance displayed x-axis. cex Factor points scaled relative default. colors vector color names, none given default provided. weak_gray Set TRUE display plot weak ties plotted gray; default FALSE.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/dist_cohesion_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance Cohesion Plot — dist_cohesion_plot","text":"plot cohesion distance threshold indicated horizontal line.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/dist_cohesion_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance Cohesion Plot — dist_cohesion_plot","text":"plot cohesion distance provides visualization manner distance transformed. threshold distinguishing strong weak ties indicated horizontal line. separated regions different density, one can often observe vertical bands color, see example Berenhaut, Moore, Melvin (2022).  distance pair d, corresponding value cohesion computed.  pair within single cluster, point colored (color provided pald plot_community_graphs functions).  Weak ties appear threshold. Note cohesion symmetric, n^2 points plotted. gray point threshold corresponds pair value cohesion greater threshold one direction.  one wants observe mutual cohesion (.e., cohesion made symmetric via minimum), set mutual = TRUE.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/dist_cohesion_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance Cohesion Plot — dist_cohesion_plot","text":"","code":"D <- dist(exdata2) dist_cohesion_plot(D)  dist_cohesion_plot(D, mutual = TRUE)  C <- cohesion_matrix(D) threshold <- strong_threshold(C) #the horizontal line dist_cohesion_plot(D, mutual = TRUE, weak_gray = TRUE)"},{"path":"https://lucymcgowan.github.io/pald/reference/exdata1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data 1 — exdata1","title":"Example Data 1 — exdata1","text":"data set consisting 8 points (2-dimensional Euclidean space) provide simple illustrative example.  data displayed Figure 1 Berenhaut, Moore, Melvin (2022).","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/exdata1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data 1 — exdata1","text":"","code":"exdata1"},{"path":"https://lucymcgowan.github.io/pald/reference/exdata1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Data 1 — exdata1","text":"data frame 8 rows 2 columns, x1 x2","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/exdata1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Data 1 — exdata1","text":"K. S. Berenhaut, K. E. Moore, R. L. Melvin, social perspective perceived distances reveals deep community structure. Proc. Natl. Acad. Sci., 119(4), 2022.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/exdata2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data 2 — exdata2","title":"Example Data 2 — exdata2","text":"data set consisting 16 points (2-dimensional Euclidean space) provide illustrative example.  data displayed Figure 2 Berenhaut, Moore, Melvin (2022).","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/exdata2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data 2 — exdata2","text":"","code":"exdata2"},{"path":"https://lucymcgowan.github.io/pald/reference/exdata2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Data 2 — exdata2","text":"data frame 16 rows 2 columns, x1 x2","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/exdata2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Data 2 — exdata2","text":"K. S. Berenhaut, K. E. Moore, R. L. Melvin, social perspective perceived distances reveals deep community structure. Proc. Natl. Acad. Sci., 119(4), 2022.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/exdata3.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data 3 — exdata3","title":"Example Data 3 — exdata3","text":"data set consisting 240 points (2-dimensional Euclidean space) provide illustrative example.  Points generated bivariate normal distributions varying mean variance (covariance matrix cI). data displayed Figure 4D Berenhaut, Moore, Melvin (2022).","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/exdata3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data 3 — exdata3","text":"","code":"exdata3"},{"path":"https://lucymcgowan.github.io/pald/reference/exdata3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Data 3 — exdata3","text":"data frame 240 rows 2 columns, x1 x2","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/exdata3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Data 3 — exdata3","text":"K. S. Berenhaut, K. E. Moore, R. L. Melvin, social perspective perceived distances reveals deep community structure. Proc. Natl. Acad. Sci., 119(4), 2022.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/local_depths.html","id":null,"dir":"Reference","previous_headings":"","what":"Local (Community) Depths — local_depths","title":"Local (Community) Depths — local_depths","text":"Creates vector local depths matrix distances (dist object).","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/local_depths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local (Community) Depths — local_depths","text":"","code":"local_depths(d)"},{"path":"https://lucymcgowan.github.io/pald/reference/local_depths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Local (Community) Depths — local_depths","text":"d matrix pairwise distances, dist object, cohesion_matrix object.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/local_depths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Local (Community) Depths — local_depths","text":"vector local depths.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/local_depths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Local (Community) Depths — local_depths","text":"Local depth interpretable probability reflects aspects relative position centrality via distance comparisons (.e., d(z, x) < d(z, y)). average local depth values always 1/2.  Cohesion partitioned local depth (see cohesion_matrix); row-sums cohesion matrix values local depth.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/local_depths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Local (Community) Depths — local_depths","text":"","code":"D <- dist(exdata1) local_depths(D) #>         1         2         3         4         5         6         7         8  #> 0.4413265 0.5418367 0.4653061 0.6246599 0.4982993 0.6420068 0.5017007 0.2848639  C <- cohesion_matrix(D) local_depths(C) #>         1         2         3         4         5         6         7         8  #> 0.4413265 0.5418367 0.4653061 0.6246599 0.4982993 0.6420068 0.5017007 0.2848639   ## local depths are the row sums of the cohesion matrix rowSums(C) #>         1         2         3         4         5         6         7         8  #> 0.4413265 0.5418367 0.4653061 0.6246599 0.4982993 0.6420068 0.5017007 0.2848639   ## cognate distance data  ld_lang <- sort(local_depths(cognate_dist))"},{"path":"https://lucymcgowan.github.io/pald/reference/noisy_circles.html","id":null,"dir":"Reference","previous_headings":"","what":"Noisy circles — noisy_circles","title":"Noisy circles — noisy_circles","text":"Noisy circles data generated scikit-learn","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/noisy_circles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Noisy circles — noisy_circles","text":"","code":"noisy_circles"},{"path":"https://lucymcgowan.github.io/pald/reference/noisy_circles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Noisy circles — noisy_circles","text":"dataframe 500 rows 2 columns, x1 x2.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/noisy_circles.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Noisy circles — noisy_circles","text":"https://scikit-learn.org/stable/modules/clustering.html#clustering","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/noisy_moons.html","id":null,"dir":"Reference","previous_headings":"","what":"Noisy moons — noisy_moons","title":"Noisy moons — noisy_moons","text":"Noisy moons data generated scikit-learn","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/noisy_moons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Noisy moons — noisy_moons","text":"","code":"noisy_moons"},{"path":"https://lucymcgowan.github.io/pald/reference/noisy_moons.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Noisy moons — noisy_moons","text":"dataframe 500 rows 2 columns, x1 x2.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/noisy_moons.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Noisy moons — noisy_moons","text":"https://scikit-learn.org/stable/modules/clustering.html#clustering","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/pald.html","id":null,"dir":"Reference","previous_headings":"","what":"Partitioned Local Depths (PaLD) — pald","title":"Partitioned Local Depths (PaLD) — pald","text":"wrapper function computes cohesion matrix, local depths, community graphs provides plot community graphs connected components graph strong ties colored connected component.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/pald.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partitioned Local Depths (PaLD) — pald","text":"","code":"pald(   d,   show_plot = TRUE,   show_labels = TRUE,   only_strong = FALSE,   emph_strong = 2,   edge_width_factor = 50,   colors = NULL,   ... )"},{"path":"https://lucymcgowan.github.io/pald/reference/pald.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partitioned Local Depths (PaLD) — pald","text":"d matrix pairwise distances dist object. show_plot Set TRUE display plot; default TRUE. show_labels Set FALSE omit vertex labels (display subset labels, use optional parameter vertex.label modify label list). Default: TRUE. only_strong Set TRUE strong ties, G_strong, displayed; default FALSE show strong (colored connected component) weak ties (gray). emph_strong Numeric. numeric factor edge widths strong ties emphasized display; default 2. edge_width_factor Numeric. Modify change displayed edge widths. Default: 50. colors vector display colors, none given default list (length 24) provided. ... Optional parameters pass igraph::plot.igraph. function. commonly passed arguments include: layout  layout graph.  none specified, FR-graph drawing algorithm used. vertex.label vector containing label names. none given, rownames c used vertex.size numeric value vertex size (default = 1) vertex.color.vec vector color names coloring vertices vertex.label.cex numeric value modifying vertex label size. (default = 1)","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/pald.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Partitioned Local Depths (PaLD) — pald","text":"list consisting : C: matrix cohesion values local_depths: vector local depths clusters: vector (community) cluster labels threshold: threshold cohesion considered particularly strong C_strong: thresholded matrix cohesion values G: graph whose edges weights mutual cohesion G_strong: weighted graph whose edges cohesion particularly strong layout: FR force-directed layout associated G","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/pald.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Partitioned Local Depths (PaLD) — pald","text":"function re-computes cohesion matrix time run. avoid unnecessary computation creating visualizations, use function cohesion_matrix compute cohesion matrix may taken input local_depths, strong_threshold, cohesion_strong, community_graphs, plot_community_graphs. details regarding component, see documentation functions.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/pald.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Partitioned Local Depths (PaLD) — pald","text":"K. S. Berenhaut, K. E. Moore, R. L. Melvin, social perspective perceived distances reveals deep community structure. Proc. Natl. Acad. Sci., 119(4), 2022.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/pald.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Partitioned Local Depths (PaLD) — pald","text":"","code":"D <- dist(exdata2) pald_results <- pald(D)  pald_results$local_depths #>         1         2         3         4         5         6         7         8  #> 0.6395671 0.5760317 0.5462169 0.6084392 0.6162338 0.4563023 0.4387963 0.4474603  #>         9        10        11        12        13        14        15        16  #> 0.4534687 0.4462963 0.4737302 0.4422985 0.5204365 0.5435185 0.4591270 0.3320767  pald(D, layout = as.matrix(exdata2), show_labels = FALSE)   C <- cohesion_matrix(D) local_depths(C) #>         1         2         3         4         5         6         7         8  #> 0.6395671 0.5760317 0.5462169 0.6084392 0.6162338 0.4563023 0.4387963 0.4474603  #>         9        10        11        12        13        14        15        16  #> 0.4534687 0.4462963 0.4737302 0.4422985 0.5204365 0.5435185 0.4591270 0.3320767  plot_community_graphs(C, layout = as.matrix(exdata2), show_labels = FALSE)  pald_languages <- pald(cognate_dist)  head(pald_languages$local_depths) #>     Irish_A     Irish_B     Welsh_N     Welsh_C Breton_List   Breton_SE  #>   0.5144152   0.5792306   0.3006146   0.3824964   0.4215615   0.4289304"},{"path":"https://lucymcgowan.github.io/pald/reference/pald_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"PaLD Color Palette — pald_colors","title":"PaLD Color Palette — pald_colors","text":"vector colors use comparing clustering methods. default colors used plotting functions.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/pald_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PaLD Color Palette — pald_colors","text":"","code":"pald_colors"},{"path":"https://lucymcgowan.github.io/pald/reference/pald_colors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PaLD Color Palette — pald_colors","text":"vector 24 colors","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/plot_community_graphs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Community Graphs — plot_community_graphs","title":"Plot Community Graphs — plot_community_graphs","text":"Provides plot community graphs, connected components graph strong ties colored connected component.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/plot_community_graphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Community Graphs — plot_community_graphs","text":"","code":"plot_community_graphs(   c,   show_labels = TRUE,   only_strong = FALSE,   emph_strong = 2,   edge_width_factor = 50,   colors = NULL,   ... )"},{"path":"https://lucymcgowan.github.io/pald/reference/plot_community_graphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Community Graphs — plot_community_graphs","text":"c cohesion_matrix object, matrix cohesion values (see cohesion_matrix). show_labels Set FALSE omit vertex labels (display subset labels, use optional parameter vertex.label modify label list). Default: TRUE. only_strong Set TRUE strong ties, G_strong, displayed; default FALSE show strong (colored connected component) weak ties (gray). emph_strong Numeric. numeric factor edge widths strong ties emphasized display; default 2. edge_width_factor Numeric. Modify change displayed edge widths. Default: 50. colors vector display colors, none given default list (length 24) provided. ... Optional parameters pass igraph::plot.igraph. function. commonly passed arguments include: layout  layout graph.  none specified, FR-graph drawing algorithm used. vertex.label vector containing label names. none given, rownames c used vertex.size numeric value vertex size (default = 1) vertex.color.vec vector color names coloring vertices vertex.label.cex numeric value modifying vertex label size. (default = 1)","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/plot_community_graphs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Community Graphs — plot_community_graphs","text":"Plots community graph, G, sub-graph strong ties emphasized colored connected component.  layout provided, Fruchterman-Reingold (FR) graph drawing algorithm used. Note FR graph drawing algorithm may provide somewhat different layout time run.  can also access save given graph layout using community_graphs(C)$layout. example shows display subset vertex labels. Note parameter emph_strong visualization purposes influence network layout.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/plot_community_graphs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Community Graphs — plot_community_graphs","text":"","code":"C <- cohesion_matrix(dist(exdata1)) plot_community_graphs(C, emph_strong = 1, layout = as.matrix(exdata1))  plot_community_graphs(C, only_strong = TRUE)   C2 <- cohesion_matrix(cognate_dist) subset_lang_names <- rownames(C2) subset_lang_names[sample(1:87, 60)] <- \"\" plot_community_graphs(C2, vertex.label = subset_lang_names, vertex.size = 3)"},{"path":"https://lucymcgowan.github.io/pald/reference/strong_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Cohesion Threshold for Strong Ties — strong_threshold","title":"Cohesion Threshold for Strong Ties — strong_threshold","text":"Given cohesion matrix, provides value threshold values cohesion considered \"particularly strong\".","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/strong_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohesion Threshold for Strong Ties — strong_threshold","text":"","code":"strong_threshold(c)"},{"path":"https://lucymcgowan.github.io/pald/reference/strong_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohesion Threshold for Strong Ties — strong_threshold","text":"c cohesion_matrix object, matrix cohesion values (see cohesion_matrix).","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/strong_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cohesion Threshold for Strong Ties — strong_threshold","text":"value threshold.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/strong_threshold.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cohesion Threshold for Strong Ties — strong_threshold","text":"threshold considered Berenhaut, Moore, Melvin (2022) may used distinguishing strong weak ties. threshold equal half average diagonal cohesion matrix, see Berenhaut, Moore, Melvin (2022).","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/strong_threshold.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cohesion Threshold for Strong Ties — strong_threshold","text":"K. S. Berenhaut, K. E. Moore, R. L. Melvin, social perspective perceived distances reveals deep community structure. Proc. Natl. Acad. Sci., 119(4), 2022.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/strong_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cohesion Threshold for Strong Ties — strong_threshold","text":"","code":"C <- cohesion_matrix(dist(exdata1)) strong_threshold(C) #> [1] 0.08866922 mean(diag(C)) / 2 #> [1] 0.08866922  ## points whose cohesion are greater than the threshold may be considered ## (strong) neighbors which(C[3, ] > strong_threshold(C)) #> 1 3 4  #> 1 3 4   ## note that the number of (strongly-cohesive) neighbors varies across the ## space which(C[4, ] > strong_threshold(C)) #> 2 3 4 6  #> 2 3 4 6  C[4, c(2, 3, 4, 6)] # cohesion values can provide neighbor weights #>          2          3          4          6  #> 0.10425170 0.10425170 0.17874150 0.09540816"},{"path":"https://lucymcgowan.github.io/pald/reference/tissue_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Tissue Data Distance Matrix — tissue_dist","title":"Tissue Data Distance Matrix — tissue_dist","text":"dist object describing distances subset tissue gene expression data following papers: http://www.ncbi.nlm.nih.gov/pubmed/17906632 http://www.ncbi.nlm.nih.gov/pubmed/21177656 http://www.ncbi.nlm.nih.gov/pubmed/24271388 obtained tissuesGeneExpression bioconductor package.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/tissue_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tissue Data Distance Matrix — tissue_dist","text":"","code":"tissue_dist"},{"path":"https://lucymcgowan.github.io/pald/reference/tissue_dist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tissue Data Distance Matrix — tissue_dist","text":"dist object 189 tissue types","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/tissue_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tissue Data Distance Matrix — tissue_dist","text":"original data frame 189 rows,  corresponding tissue, colon, kidney cerebellum. 22,215 columns corresponding gene expression data rows. converted distance matrix.","code":""},{"path":"https://lucymcgowan.github.io/pald/reference/tissue_dist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tissue Data Distance Matrix — tissue_dist","text":"M. Love R. Irizarry. tissueGeneExpression. Bioconductor Package","code":""}]
